
Bade (TA) 
forEach(callback function)
 5:49 PM | Today 

Bade (TA) 
Callback function is passing a function like a variable
 5:49 PM | Today 

Bade (TA) 
In most cases, you pass an anonymous function so that you don't need to define a new function every time you want to do a callback
 5:50 PM | Today 

Bade (TA) 
(param) => {
   // some code
 }
 5:50 PM | Today 

Bade (TA) 
foreach( (param) => {

});
 5:50 PM | Today 

Bade (TA) 
Some callback functions have a parameter passed into them by the function that's calling them.
 5:51 PM | Today 

Bade (TA) 
For example, forEach passes whatever element it's iterating on as the 1st param.
 5:52 PM | Today 

Bade (TA) 
[ 1, 2, 3, 4, 5 ]
 5:52 PM | Today 

Bade (TA) 
forEach( (number) => {
    console.log(number);
}

output: 1   2   3   4    5
 5:52 PM | Today 

Bade (TA) 
function someFunction(number) {
   console.log(number);
}
 5:54 PM | Today 

Bade (TA) 
arr.forEach(someFunction);
 5:54 PM | Today 

Bade (TA) 
In the example above, the value of number will be the element of the array. 
 5:57 PM | Today 

Bade (TA) 
For example, on the first iteration of forEach, number will equal 1. One the second iteration, number will equal 2.
 5:57 PM | Today 

Bade (TA) 
arr.forEach(array.push)
 5:59 PM | Today 

Bade (TA) 
If a function has a callback as a parameter, then you either need to give it an anonymous function or the name of a function.
 6:00 PM | Today 